package com.example.ikramova.PDF;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class FirstPdf {
    private static String FILE = "C:/Users/Lenovo PC/Ravnaq-bank/Example/table.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 15,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public static void main(String[] args) {
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            Image img = Image.getInstance("печать 1.png");
            img.scaleToFit(20f, 20f);
            img.setAbsolutePosition(480f, 660f);
            img.scaleAbsolute(100, 100);
            document.add(img);
        //    addMetaData(document);
            addTitlePage(document);
            createTable(document);

            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("My first PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Lars Vogel");
        document.addCreator("Lars Vogel");
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        BaseFont bf = null;
        try {
            bf = BaseFont.createFont("c:/windows/fonts/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
        } catch (DocumentException | IOException e) {
            throw new RuntimeException(e);
        }
        Font font = new Font(bf, 13,Font.BOLD);
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 1);
        preface.add(new Paragraph("История карты в системе ХУМО (Номер карты: 9860240101730598 GAYBULLAKHON KHASHIMOV)\t\t\t\n", font));

//        addEmptyLine(preface, 1);
//        preface.add(new Paragraph(
//                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
//                smallBold));
//        addEmptyLine(preface, 3);

        preface.add(new Paragraph("за период с 01.03.2023 по 10.04.2023\n",
                smallBold));
        addEmptyLine(preface, 2);
        document.add(preface);
    }

    private static void addContent(Document document) throws DocumentException {

//        BaseFont bf = null;
//        try {
//            bf = BaseFont.createFont("c:/windows/fonts/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
//        } catch (DocumentException | IOException e) {
//            throw new RuntimeException(e);
//        }
//        Font font = new Font(bf, 13);

//        Anchor anchor = new Anchor(new Phrase("На русском 3",font));
//        anchor.setName("First Chapter");

        // Second parameter is the number of the chapter
      //  Chapter catPart = new Chapter(new Paragraph(anchor), 1);


        //  Section subCatPart = catPart.addSection(subPara);
      //  subCatPart.add(new Paragraph(new Phrase("На русском 3",font)));

     //   subPara = new Paragraph(new Phrase("На русском 3",font));
//        subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph(new Phrase("На русском 3",font)));
//        subCatPart.add(new Paragraph(new Phrase("На русском 3",font)));
//        subCatPart.add(new Paragraph(new Phrase("На русском 3",font)));

        // add a list
        //  createList(subCatPart);
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 5);
       // subCatPart.add(paragraph);
        document.add(paragraph);
        // add a table
        createTable(document);

        // now add all this to the document

    }

    private static void createTable(Document subCatPart)
            throws DocumentException {
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 5);
        // subCatPart.add(paragraph);
        subCatPart.add(paragraph);
        PdfPTable table = new PdfPTable(9);
        table.setTotalWidth(PageSize.A4.getWidth()-1);
        table.setWidthPercentage(100); //Width 100%
        table.setSpacingBefore(10f); //Space before table
        table.setSpacingAfter(10f); //Space after table

        //Set Column widths
        float[] columnWidths = { 500F, 500F, 500F, 500F, 500F, 500F, 500F, 500F, 500f};
        table.setWidths(columnWidths);
        table.setLockedWidth(true);
        BaseFont bf = null;
        try {
            bf = BaseFont.createFont("c:/windows/fonts/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
        } catch (DocumentException | IOException e) {
            throw new RuntimeException(e);
        }
        Font font = new Font(bf, 9);
//        PdfPCell c1 = new PdfPCell(new Phrase("ID файла EMPC",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        c1.setCalculatedHeight(10);
//      //  c1.setBorderWidth(10);
//        table.addCell(c1);
//
//        c1 = new PdfPCell(new Phrase("Дата проведения",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//
//        c1 = new PdfPCell(new Phrase("Дата обработки",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//
//        c1 = new PdfPCell(new Phrase("Операцион коди",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//        c1 = new PdfPCell(new Phrase("кириллчада",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//        c1 = new PdfPCell(new Phrase("Счет карты",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//        c1 = new PdfPCell(new Phrase("Терминал ID",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//        c1 = new PdfPCell(new Phrase("o'zbek tilida",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//        c1 = new PdfPCell(new Phrase("Наименование торговой точки",font));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//
//        table.setHeaderRows(1);
        for (int i = 0; i <9; i++) {
            table.addCell(new Phrase(Element.ALIGN_CENTER, "кириллчада", font));
//            table.addCell(new Phrase("кириллчада", font));
//            table.addCell(new Phrase("кириллчада", font));
//            table.addCell(new Phrase("На русском 3", font));
//            table.addCell(new Phrase("На русском 3", font));
//            table.addCell(new Phrase("На русском 3", font));
//            table.addCell(new Phrase("o'zbek tilida", font));
//            table.addCell(new Phrase("o'zbek tilida", font));
//            table.addCell(new Phrase("o'zbek tilida", font));
        }
        subCatPart.add(table);

    }

    private static void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

}